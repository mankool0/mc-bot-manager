name: Linux Release

on:
  push:
    branches:
      - 'master'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'master'
  workflow_dispatch:

defaults:
  run:
    shell: bash

env:
  QT_VERSION: 6.9.3
  APPIMAGE_ARTIFACT: mc-bot-manager-x86_64.AppImage
  STATIC_ARTIFACT: mc-bot-manager-linux-static

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout repo
        uses: actions/checkout@v5
        with:
          submodules: recursive

      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{ env.QT_VERSION }}
          host: 'linux'
          target: 'desktop'
          arch: 'linux_gcc_64'
          modules: 'qtgrpc'

      - name: Download linuxdeploy tools
        run: |
          wget -O linuxdeploy-x86_64.AppImage https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
          wget -O linuxdeploy-plugin-qt-x86_64.AppImage https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage
          chmod +x linuxdeploy*.AppImage

      - name: Build static binary
        run: |
          mkdir -p build-static
          cd build-static
          cmake .. -DCMAKE_BUILD_TYPE=Release
          cmake --build . -j$(nproc)
          strip mc-bot-manager

      - name: Build AppImage
        run: |
          mkdir -p build-appimage
          cd build-appimage
          cmake .. -DCMAKE_BUILD_TYPE=Release -DBUILD_APPIMAGE=ON -DCMAKE_INSTALL_PREFIX=/usr
          cmake --build . -j$(nproc)
          strip mc-bot-manager
          mv ../linuxdeploy*.AppImage .
          export PATH=$PWD:$PATH
          cmake --build . --target appimage
          mv MC_Bot_Manager*.AppImage ../${{ env.APPIMAGE_ARTIFACT }}

      - name: Upload static binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.STATIC_ARTIFACT }}
          path: build-static/mc-bot-manager

      - name: Upload AppImage
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APPIMAGE_ARTIFACT }}
          path: ${{ env.APPIMAGE_ARTIFACT }}

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            build-static/mc-bot-manager
            ${{ env.APPIMAGE_ARTIFACT }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
